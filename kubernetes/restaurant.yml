# restaurant.yml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: model-service-depl
  labels:
    app: model-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: model-service
  template:
    metadata:
      labels:
        app: model-service
    spec:
      containers:
        - name: model-service
          image: ghcr.io/remla23-team11/model-service:latest
          ports:
            - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: model-service-serv
  labels:
    app: model-service-label
spec:
  selector:
    app: model-service
  ports:
    - port: 8080
      targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-depl
  labels:
    app: app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app
  template:
    metadata:
      labels:
        app: app
    spec:
      containers:
        - name: app
          image: ghcr.io/remla23-team11/app:latest
          ports:
            - containerPort: 3000
          env:
            - name: REACT_APP_API_URL
              valueFrom:
                configMapKeyRef:
                  name: my-config
                  key: model.host
            - name: PUBLIC_URL
              value: "/app"
---
apiVersion: v1
kind: Service
metadata:
  name: app-serv
spec:
  selector:
    app: app
  ports:
    - port: 3000
      targetPort: 3000
---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: my-ingress
# 
# spec:
#   rules:
#     - http:
#         paths:
#           - pathType: Prefix
#             path: "/app"
#             backend:
#               service:
#                 name: app-serv
#                 port:
#                   number: 3000
#           - pathType: Prefix
#             path: "/"
#             backend:
#               service:
#                 name: model-service-serv
#                 port:
#                   number: 8080
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: mymonitor
  labels:
    release: myprom
spec:
  selector:
    matchLabels:
      app: model-service-label
  endpoints:
    - interval: 1s
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-config
data:
  model.host: "http://localhost"
---
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: my-istio-gateway
spec:
  selector:
    istio: ingressgateway
  servers:
    - port:
        number: 80
        name: http
        protocol: HTTP
      hosts:
        - "*"
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: my-virtual-service
spec:
  gateways:
    - my-istio-gateway
  hosts:
    - "*"
  http:
    - match:
        - uri:
            prefix: /app
      route:
        - destination:
            host: app-serv
            port:
              number: 3000
    - match:
        - uri:
            prefix: /
      route:
        - destination:
            host: model-service-serv
            port:
              number: 8080
